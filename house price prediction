# Importing necessary libraries
import numpy as np
import matplotlib.pyplot as plt

# Generating random data for demonstration purposes
np.random.seed(42)
X = 2 * np.random.rand(100, 1)
y = 4 + 3 * X + np.random.randn(100, 1)

# Visualizing the data
plt.scatter(X, y)
plt.title('Generated Data for House Price Prediction')
plt.xlabel('House-Size (X)')
plt.ylabel('House Price (y)')
plt.show()

# Splitting the data into training and testing sets
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Training a linear regression model
from sklearn.linear_model import LinearRegression

lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)

# Making predictions on the test set
y_pred = lin_reg.predict(X_test)

# Visualizing the regression line
plt.scatter(X_test, y_test)
plt.plot(X_test, y_pred, color='red', linewidth=3)
plt.title('Linear Regression for House Price Prediction')
plt.xlabel('House Size')
plt.ylabel('House Price')
plt.show()

# Evaluating the model
from sklearn.metrics import mean_squared_error

mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# Making a prediction for a new house size
new_house_size = np.array([[2.5]])
predicted_price = lin_reg.predict(new_house_size)
print(f'Predicted Price for a house with size {new_house_size[0][0]}: {predicted_price[0][0]}')
